<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on luispe</title>
    <link>http://localhost:1313/blog/tags/golang/</link>
    <description>Recent content in Golang on luispe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jun 2022 10:47:02 -0300</lastBuildDate><atom:link href="http://localhost:1313/blog/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interfaces and &#34;copy paste&#34;</title>
      <link>http://localhost:1313/blog/posts/interfaces-correct-use/</link>
      <pubDate>Mon, 20 Jun 2022 10:47:02 -0300</pubDate>
      
      <guid>http://localhost:1313/blog/posts/interfaces-correct-use/</guid>
      <description>In the following post I want to share a common mistake I used to make in my Golang projects. And as the title and description says, today we are going to talk about interfaces.
You will probably come across some references to another post I did on hexagonal architecture, I think part of the misuse of interfaces is the consequence of following &amp;ldquo;medium&amp;rdquo; publications to the letter and not taking the time to understand the underlying concept.</description>
    </item>
    
    <item>
      <title>Hexagonal Architecture</title>
      <link>http://localhost:1313/blog/posts/hexagonal-architecture/</link>
      <pubDate>Thu, 09 Jun 2022 21:53:34 -0300</pubDate>
      
      <guid>http://localhost:1313/blog/posts/hexagonal-architecture/</guid>
      <description>This is the first of a series where we will review different development patterns that I made mistakes and what is currently and what I understand so far, the best way to apply it.
As the title of the publication says, today I want to talk about hexagonal architecture.
Preface I have been noticing a lot of &amp;ldquo;hype&amp;rdquo; around the hexagonal architecture and I would like to be clear about it, I am not against it, on the contrary, I think it is an excellent pattern.</description>
    </item>
    
  </channel>
</rss>